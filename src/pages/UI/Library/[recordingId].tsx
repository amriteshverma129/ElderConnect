import Head from "next/head";
import dynamic from "next/dynamic";
import { Box } from "@mui/material";
import { NextPage } from "next";
import { useRouter } from "next/router";
import Loader2 from "../../../components/Loader/Loader2";
import { withLayout } from "../../../components/Layout/withLayout";
import { LibrarydetailSkeleton } from "../../../components/Library/LibrarydetailSkeleton";
import { useUser } from "../../../components/Authenticate/UserContext";
const LibraryDetail = dynamic(() => import("../../../components/Library/LibraryDetail"), {
    loading: () => <LibrarydetailSkeleton />,
});

const LibraryDetailPage: NextPage = () => {
    const router = useRouter();
    const { user } = useUser();

    if (user.email || user.phone_number) {
        return (
            <Box sx={{ flexGrow: 1 }}>
                <Head>
                    <title>Library-{router.query.eventTopic}</title>
                    <meta name="description" content="Generated by create next app" />
                    <link
                        rel="icon"
                        href="https://images.prismic.io/loop-web-members/4df527d2-6dfb-4c78-9499-a0facef03af3_looptech.webp?auto=compress,format"
                    />
                </Head>
                <LibraryDetail recordingId={router.query.recordingId} startTime={router.query.startTime} />
            </Box>
        );
    }
    return <Loader2 />;
};

export default withLayout(LibraryDetailPage);
