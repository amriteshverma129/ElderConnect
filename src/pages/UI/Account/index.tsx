import Head from "next/head";
import { withLayout } from "../../../components/Layout/withLayout";
import { Box } from "@mui/material";
import { NextPage } from "next";
import BellIcon from "../../../icons/BellIcon";
import ProfileIcon from "../../../icons/ProfileIcon";
import LockIcon from "../../../icons/LockIcon";
import SettingIcon from "../../../icons/SettingIcon";
import styles from "../../../components/Account/Style/account.module.scss";
import { useRouter } from "next/router";
import PurchaseIcon from "../../../icons/PurchaseIcon";
import { useUser } from "../../../components/Authenticate/UserContext";
import Loader2 from "../../../components/Loader/Loader2";
//import LockIcon from "../../../icons/LockIcon";
import { useEffect, useState } from "react";
// import CommunitiesIcon from "../../../icons/CommunitiesIcon";
// import FollowersIcon from "../../../icons/FollowersIcon";
// import FollowingIcon from "../../../icons/FollowingIcon";
// import ConnectionsIcon from "../../../icons/ConnectionsIcon";
// import BlockedUserIcon from "../../../icons/BlockedUserIcon";
import Skeleton from "@mui/material/Skeleton";

const accountArr = [
    {
        id: 1,
        title: "Profile",
        pathname: `/UI/Account/Profile`,
        description: "Update your personal info name, interests, birthday etc",
        icon: <ProfileIcon />,
    },
    {
        id: 2,
        title: "Purchase Membership",
        pathname: `/UI/Account/Purchase Membership`,
        description: "Manage your membership",
        icon: <PurchaseIcon />,
    },
    {
        id: 3,
        title: "Change Password",
        pathname: `/UI/Account/Change Password`,
        description: "Manage your password.",
        icon: <LockIcon />,
    },
    {
        id: 4,
        title: "Notifications",
        pathname: `/UI/Account/Notifications`,
        description: "Manage all your notifications related to events",
        icon: <BellIcon />,
    },
    {
        id: 5,
        title: "Settings",
        pathname: `/UI/Account/Settings`,
        description: "Manage your events' notifications setting",
        icon: <SettingIcon />,
    },
    // {
    //     id: 6,
    //     title: "Communities(24)",
    //     pathname: `/UI/Account/Communities`,
    //     description: "Manage all your joined communities from here",
    //     icon: <CommunitiesIcon />,
    // },
    // {
    //     id: 7,
    //     title: "Followers(35)",
    //     pathname: `/UI/Account/Followers`,
    //     description: "Manage all yours followers from here",
    //     icon: <FollowersIcon />,
    // },
    // {
    //     id: 8,
    //     title: "Following(56)",
    //     pathname: `/UI/Account/Following`,
    //     description: "Manage all yours following from here",
    //     icon: <FollowingIcon />,
    // },
    // {
    //     id: 9,
    //     title: "Connections(45)",
    //     pathname: `/UI/Account/Connections`,
    //     description: "Manage all your connections here",
    //     icon: <ConnectionsIcon />,
    // },
    // {
    //     id: 10,
    //     title: "Blocked users(5)",
    //     pathname: `/UI/Account/Blocked User`,
    //     description: "Manage all yours blocked users from here",
    //     icon: <BlockedUserIcon />,
    // },
];

const AccountPage: NextPage = () => {
    const router = useRouter();
    const { user, userDetails, countTodaysNotification } = useUser();
    const [newList, setNewList] = useState<
        Array<{ id: number; title: string; description: string; icon: JSX.Element; pathname: string }>
    >([]);

    useEffect(() => {
        setNewList([]);
        if (userDetails.contactId) {
            const newAccountArrList = accountArr.filter((accountCard) => {
                if (accountCard.title === "Change Password" && !user.email) return false;
                else if (
                    accountCard.title === "Purchase Membership" &&
                    userDetails.roles
                        ?.split(",")
                        .some(
                            (role) =>
                                role?.trim() === "The Loop Spectrum Role" ||
                                role?.trim() === "The Loop One Generation Role" ||
                                role?.trim() === "The Loop USC Role",
                        )
                )
                    return false;
                return true;
            });
            setNewList(newAccountArrList);
        }
    }, [userDetails]);

    const newSkeletonArr = new Array(5).fill(0);

    if (user.email || user.phone_number) {
        return (
            <Box sx={{ flexGrow: 1 }} className="layout-container">
                <Head>
                    <title>Account</title>
                    <meta name="description" content="Generated by create next app" />
                    <link
                        rel="icon"
                        href="https://images.prismic.io/loop-web-members/4df527d2-6dfb-4c78-9499-a0facef03af3_looptech.webp?auto=compress,format"
                    />
                </Head>
                <div className={styles["account-heading"]}>My Account</div>
                <div className={styles["account-cards-holder"]}>
                    {newList.length !== 0 &&
                        newList.map((accountCard) => {
                            return (
                                <div
                                    className={styles["account-card"]}
                                    onClick={() => {
                                        router.push({
                                            pathname: accountCard.pathname,
                                        });
                                    }}
                                    key={accountCard.id}
                                >
                                    {accountCard.icon}
                                    {accountCard.title === "Notifications" && (
                                        <div className={styles["account-Notification-card-icon"]}>
                                            <span>{countTodaysNotification} </span>
                                        </div>
                                    )}

                                    <h4 className={styles["account-card-title"]}>{accountCard.title}</h4>
                                    <p className={styles["account-card-para"]}>{accountCard.description}</p>
                                </div>
                            );
                        })}
                    {newList.length === 0 &&
                        newSkeletonArr.map((index) => {
                            return (
                                <div className={styles["account-card-Skeleton"]} key={index}>
                                    <Skeleton variant="rounded" sx={{ height: "100%", width: "100%" }} />
                                </div>
                            );
                        })}
                </div>
            </Box>
        );
    }
    return <Loader2 />;
};

export default withLayout(AccountPage);
