import Head from "next/head";
import dynamic from "next/dynamic";
import { withLayout } from "../../../components/Layout/withLayout";
import { GetServerSideProps, NextPage } from "next";
import { ssrGetSingleBuddy } from "../../../generated/page";
const BuddyDetail = dynamic(() => import("../../../components/Buddy/BuddyDetail"));
import { BuddyDetailPageProps } from "../../../components/Buddy/Type";
import Loader2 from "../../../components/Loader/Loader2";
import { useUser } from "../../../components/Authenticate/UserContext";

const BuddyDetailPage: NextPage<BuddyDetailPageProps> = ({ data }) => {
    const { user } = useUser();
    if (user.email || user.phone_number) {
        return (
            <div>
                <Head>
                    <title>
                        {data.allBuddys.edges &&
                            data.allBuddys.edges.length &&
                            data.allBuddys.edges[0] &&
                            data.allBuddys.edges[0].node.name}
                    </title>
                    <meta name="description" content="Generated by create next app" />
                    <link
                        rel="icon"
                        href="https://images.prismic.io/loop-web-members/4df527d2-6dfb-4c78-9499-a0facef03af3_looptech.webp?auto=compress,format"
                    />
                </Head>
                <BuddyDetail data={data} />
            </div>
        );
    }
    return <Loader2 />;
};

export default withLayout(BuddyDetailPage);

export const getServerSideProps: GetServerSideProps = async (context) => {
    context.res.setHeader("Cache-Control", "public, s-maxage=10, stale-while-revalidate=59");
    const serverSideProps = await ssrGetSingleBuddy.getServerPage(
        {
            variables: {
                email: String(context.query.buddyId),
            },
        },
        context,
    );
    return {
        props: {
            ...serverSideProps.props,
        },
    };
};
