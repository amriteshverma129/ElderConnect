import Head from "next/head";
import { withLayout } from "../../../../components/Layout/withLayout";
import { Box } from "@mui/material";
import { GetServerSideProps, NextPage } from "next";
import { ssrGetAllBuddies } from "../../../../generated/page";
import dynamic from "next/dynamic";
import styles from "../../../../components/Buddy/Style/chooseBuddyList.module.scss";
import { ChooseBuddyPageProps } from "../../../../components/Buddy/Type";
import Loader2 from "../../../../components/Loader/Loader2";
import { useUser } from "../../../../components/Authenticate/UserContext";
const ChooseBuddyList = dynamic(() => import("../../../../components/Buddy/ChooseBuddyList"), {
    loading: () => <Loader2 />,
});

const ChooseBuddyPage: NextPage<ChooseBuddyPageProps> = ({ data }) => {
    const { user } = useUser();
    if (user.email || user.phone_number) {
        return (
            <Box sx={{ flexGrow: 1 }} className="layout-container-fluid">
                <Head>
                    <title>Choose Your Buddy</title>
                    <meta name="description" content="Generated by create next app" />
                    <link
                        rel="icon"
                        href="https://images.prismic.io/loop-web-members/4df527d2-6dfb-4c78-9499-a0facef03af3_looptech.webp?auto=compress,format"
                    />
                </Head>
                <div className={styles["chooseBuddyPage-heading"]}>Choose your Buddy</div>
                {typeof user.email === "string" && <ChooseBuddyList data={data} email={user.email} />}
            </Box>
        );
    }
    return <Loader2 />;
};

export default withLayout(ChooseBuddyPage);

export const getServerSideProps: GetServerSideProps = async (context) => {
    context.res.setHeader("Cache-Control", "public, s-maxage=10, stale-while-revalidate=59");
    const serverSideProps = await ssrGetAllBuddies.getServerPage(
        {
            variables: {},
        },
        context,
    );
    return {
        props: {
            ...serverSideProps.props,
        },
    };
};
